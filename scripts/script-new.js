document.addEventListener('DOMContentLoaded', () => {
    // ========================================
    // –û–ë–†–ê–ë–û–¢–ö–ê –¢–ï–õ–ï–§–û–ù–ê - –û–ë–©–ê–Ø –§–£–ù–ö–¶–ò–Ø
    // ========================================
    const phoneElement = document.querySelector('.phone');
    const notification = document.getElementById('copyNotification');

    function isMobileOrTablet() {
        return window.innerWidth <= 1024;
    }

    if (phoneElement) {
        phoneElement.addEventListener('click', function() {
            if (!isMobileOrTablet()) {
                const phone = this.getAttribute('data-phone');
                notification.classList.remove('show', 'hide');
                notification.style.display = 'none';

                navigator.clipboard.writeText(phone).then(() => {
                    notification.style.display = 'block';
                    notification.classList.add('show');
                    setTimeout(() => {
                        notification.classList.remove('show');
                        notification.classList.add('hide');
                        setTimeout(() => {
                            notification.style.display = 'none';
                        }, 300);
                    }, 4000);
                }).catch(err => {
                    console.error('–û—à–∏–±–∫–∞ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è: ', err);
                });
            } else {
                window.location.href = 'tel:+89166939530';
            }
        });
    }
});

// ========================================
// –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø API
// ========================================
const API_CONFIG = {
    baseUrl: 'https://terlynedev.space/api',
    filesPath: 'https://terlynedev.space/api/files/', // –ø—É—Ç—å –∫ —Ñ–∞–π–ª–∞–º –±–∞–Ω–Ω–µ—Ä–æ–≤ –∏ –Ω–æ–≤–æ—Å—Ç–µ–π
    endpoints: {
        banners: '/banners/',
        projects: '/projects',
        news: '/news',
        feedbacks: '/feedbacks'
    },
    timeout: 5000 // 10 —Å–µ–∫—É–Ω–¥
};

// ========================================
// –£–¢–ò–õ–ò–¢–´ –î–õ–Ø API
// ========================================

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ API
async function checkApiConnection() {
    console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ API...');
    
    try {
        const controller = new AbortController();
        const timeoutId = setTimeout(() => controller.abort(), API_CONFIG.timeout);
        
        const response = await fetch(API_CONFIG.baseUrl, {
            method: 'HEAD',
            signal: controller.signal
        });
        
        clearTimeout(timeoutId);
        
        if (response.ok || response.status === 404) { // 404 —Ç–æ–∂–µ –æ–∑–Ω–∞—á–∞–µ—Ç —á—Ç–æ —Å–µ—Ä–≤–µ—Ä –¥–æ—Å—Ç—É–ø–µ–Ω
            console.log('‚úÖ API –¥–æ—Å—Ç—É–ø–µ–Ω');
            return true;
        } else {
            throw new Error(`HTTP ${response.status}: ${response.statusText}`);
        }
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ API:', error.message);
        return false;
    }
}

// –ü–æ–∫–∞–∑–∞—Ç—å –æ—à–∏–±–∫—É –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
function showConnectionError() {
    const errorDiv = document.createElement('div');
    errorDiv.id = 'api-connection-error';
    errorDiv.style.cssText = `
        position: fixed;
        top: 0;
        left: 0;
        right: 0;
        background: #f8d7da;
        color: #721c24;
        padding: 15px;
        text-align: center;
        border-bottom: 2px solid #f5c6cb;
        z-index: 9999;
        font-family: Arial, sans-serif;
        font-size: 14px;
    `;
    errorDiv.innerHTML = `
        <strong>‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–µ—Ä–≤–µ—Ä—É</strong><br>
        <small>–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∏–ª–∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É</small>
    `;
    
    document.body.insertBefore(errorDiv, document.body.firstChild);
    
    // –°–¥–≤–∏–≥–∞–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç –≤–Ω–∏–∑
    document.body.style.paddingTop = '70px';
}

// –û–±—â–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è API –∑–∞–ø—Ä–æ—Å–æ–≤
async function makeApiRequest(endpoint, options = {}) {
    const url = `${API_CONFIG.baseUrl}${endpoint}`;
    console.log(`üì° –ó–∞–ø—Ä–æ—Å –∫: ${url}`);
    
    try {
        const response = await fetch(url, {
            ...options,
            headers: {
                'Content-Type': 'application/json',
                ...options.headers
            }
        });
        
        if (!response.ok) {
            throw new Error(`HTTP ${response.status}: ${response.statusText}`);
        }
        
        const data = await response.json();
        console.log(`‚úÖ –î–∞–Ω–Ω—ã–µ –ø–æ–ª—É—á–µ–Ω—ã: ${Array.isArray(data) ? data.length + ' —ç–ª–µ–º–µ–Ω—Ç–æ–≤' : '–æ–±—ä–µ–∫—Ç'}`);
        return data;
        
    } catch (error) {
        console.error(`‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –∫ ${url}:`, error.message);
        throw error;
    }
}

// –ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–∞
function safeText(text, fallback = '') {
    return text && text.trim() ? text.trim() : fallback;
}

// ========================================
// –§–£–ù–ö–¶–ò–ò –ó–ê–ì–†–£–ó–ö–ò –î–ê–ù–ù–´–•
// ========================================

// –ó–∞–≥—Ä—É–∑–∫–∞ –±–∞–Ω–Ω–µ—Ä–æ–≤
async function loadBanners() {
    console.log('üéØ –ó–∞–≥—Ä—É–∂–∞–µ–º –±–∞–Ω–Ω–µ—Ä—ã...');
    
    try {
        const banners = await makeApiRequest(API_CONFIG.endpoints.banners);
        
        // –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –∏ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞
        const activeBanners = banners
            .filter(banner => banner.is_active === true)
            .sort((a, b) => {
                const orderA = a.count_order || 999;
                const orderB = b.count_order || 999;
                return orderA !== orderB ? orderA - orderB : a.id.localeCompare(b.id);
            });
        
        console.log(`üìä –ê–∫—Ç–∏–≤–Ω—ã—Ö –±–∞–Ω–Ω–µ—Ä–æ–≤: ${activeBanners.length}`);
        
        const carouselSlides = document.querySelector('.carousel-slides');
        if (!carouselSlides) {
            console.warn('‚ö†Ô∏è –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –±–∞–Ω–Ω–µ—Ä–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω');
            return;
        }
        
        carouselSlides.innerHTML = '';
        
        if (activeBanners.length === 0) {
            createDefaultSlide(carouselSlides);
        } else {
            activeBanners.forEach((banner, index) => createBannerSlide(banner, index, carouselSlides));
        }
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–∞—Ä—É—Å–µ–ª–∏
        if (typeof window.initCarousel === 'function') {
            window.initCarousel();
        }
        
        console.log('‚úÖ –ë–∞–Ω–Ω–µ—Ä—ã –∑–∞–≥—Ä—É–∂–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ');
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –±–∞–Ω–Ω–µ—Ä–æ–≤:', error.message);
        const carouselSlides = document.querySelector('.carousel-slides');
        if (carouselSlides) {
            createDefaultSlide(carouselSlides);
        }
    }
}



// –°–æ–∑–¥–∞–Ω–∏–µ —Å–ª–∞–π–¥–∞ –±–∞–Ω–Ω–µ—Ä–∞
function createBannerSlide(banner, index, container) {
    const slide = document.createElement('div');
    slide.className = index === 0 ? 'carousel-slide active' : 'carousel-slide';

    const title = safeText(banner.title);
    const description = safeText(banner.description);
        let imageUrl = banner.image_url ? `${API_CONFIG.filesPath}${banner.image_url}` : null;
    const url = safeText(banner.redirect_url, '#');

    // –û—Å–æ–±–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–ª—è –±–∞–Ω–Ω–µ—Ä–∞ —Å id '0993290b-ca49-4167-9ac8-0b36fd69a4f9'
    let imgTag = '';
        if (imageUrl) {
            imgTag = `<img src="${imageUrl}" alt="${title || 'Banner'}" onerror="this.style.display='none'; this.nextElementSibling.style.display='block';">`;
            imgTag += `<div class="banner-img-error" style="display:none; color:red; background:#ffe6e6; padding:8px; text-align:center;">‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –±–∞–Ω–Ω–µ—Ä–∞</div>`;
        } else {
            imgTag = `<div class="banner-img-error" style="color:red; background:#ffe6e6; padding:8px; text-align:center;">‚ùå –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –±–∞–Ω–Ω–µ—Ä–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–æ</div>`;
        }

    slide.innerHTML = `
        ${imgTag}
        ${title || description ? `
            <div class="text-overlay">
                ${title ? `<div class="text-block1">${title}</div>` : ''}
                ${description ? `<div class="text-block2">${description}</div>` : ''}
            </div>
        ` : ''}
    `;

    container.appendChild(slide);
}

// –ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–æ–µ–∫—Ç–æ–≤
async function loadProjects() {
    console.log('üìã –ó–∞–≥—Ä—É–∂–∞–µ–º –ø—Ä–æ–µ–∫—Ç—ã...');
    
    try {
        const projects = await makeApiRequest(API_CONFIG.endpoints.projects);
        
        const container = document.querySelector('.project-body');
        if (!container) {
            console.warn('‚ö†Ô∏è –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –ø—Ä–æ–µ–∫—Ç–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω');
            return;
        }
        
        console.log(`üìä –ü—Ä–æ–µ–∫—Ç–æ–≤ –ø–æ–ª—É—á–µ–Ω–æ: ${projects.length}`);
        
        projects.forEach(project => createProjectCard(project, container));
        
        console.log('‚úÖ –ü—Ä–æ–µ–∫—Ç—ã –∑–∞–≥—Ä—É–∂–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ');
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–æ–µ–∫—Ç–æ–≤:', error.message);
    }
}

// –°–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ä—Ç–æ—á–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞
function createProjectCard(project, container) {
    const title = safeText(project.title, '–ü—Ä–æ–µ–∫—Ç –±–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è');
    const body = safeText(project.body, '–û–ø–∏—Å–∞–Ω–∏–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç');
    const url = safeText(project.redirect_url, '#');
    const shortText = body.length > 100 ? body.substring(0, 100) + '...' : body;
    const card = document.createElement('div');
    card.className = 'project-card';

    // –§–æ—Ä–º–∏—Ä—É–µ–º URL –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    const imageUrl = project.image_url ?
        `${API_CONFIG.filesPath}${project.image_url}` :
        './public/glavnaya.svg';

    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º background-image —á–µ—Ä–µ–∑ CSS
    card.style.backgroundImage = `url('${imageUrl}')`;
    card.style.backgroundSize = 'cover';
    card.style.backgroundPosition = 'center';
    card.style.backgroundRepeat = 'no-repeat';

    card.innerHTML = `
        <div class="project-card-content">
            <p class="project-title">${title}</p>
            <div class="project-card-down">
                <p class="project-text" data-full-text="${body}" onclick="toggleText(this)">
                    ${shortText}
                </p>
                <a href="${url}" class="project-body-button">
                    <p>–ü–æ–¥—Ä–æ–±–Ω–µ–µ</p>
                </a>
            </div>
        </div>
    `;
    
    container.appendChild(card);
}

// –ó–∞–≥—Ä—É–∑–∫–∞ –Ω–æ–≤–æ—Å—Ç–µ–π
async function loadNews() {
    console.log('üì∞ –ó–∞–≥—Ä—É–∂–∞–µ–º –Ω–æ–≤–æ—Å—Ç–∏...');
    
    try {
        const news = await makeApiRequest(API_CONFIG.endpoints.news);
        
        const container = document.querySelector('.NOV .KAR-NOV');
        if (!container) {
            console.warn('‚ö†Ô∏è –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –Ω–æ–≤–æ—Å—Ç–µ–π –Ω–µ –Ω–∞–π–¥–µ–Ω');
            return;
        }
        
        container.innerHTML = '';
        console.log(`üìä –ù–æ–≤–æ—Å—Ç–µ–π –ø–æ–ª—É—á–µ–Ω–æ: ${news.length}`);
        
        news.forEach(newsItem => createNewsCard(newsItem, container));
        
        console.log('‚úÖ –ù–æ–≤–æ—Å—Ç–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ');
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–æ–≤–æ—Å—Ç–µ–π:', error.message);
    }
}

// –°–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ä—Ç–æ—á–∫–∏ –Ω–æ–≤–æ—Å—Ç–∏
function createNewsCard(newsItem, container) {
    const title = safeText(newsItem.title, '–ù–æ–≤–æ—Å—Ç—å –±–µ–∑ –∑–∞–≥–æ–ª–æ–≤–∫–∞');
    const fullText = safeText(newsItem.min_text, '–û–ø–∏—Å–∞–Ω–∏–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç');
    const url = safeText(newsItem.redirect_url, '#');
    const date = newsItem.news_date ? 
        new Date(newsItem.news_date).toLocaleDateString() : 
        '–î–∞—Ç–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞';
    const imageUrl = newsItem.image_url ? 
        `${API_CONFIG.filesPath}${newsItem.image_url}`  
            : './public/news-placeholder.svg';
    const shortText = fullText.length > 100 ? fullText.substring(0, 100) + '...' : fullText;
    const card = document.createElement('div');
    card.className = 'Bloc-b';
    card.innerHTML = `
        <img src="${imageUrl}" draggable="false" onerror="this.src='./public/news-placeholder.svg';">
        <div class="text">
            <p>${date}</p>
            <h2>${title}</h2>
            <p class="p2" data-full-text="${fullText}" onclick="toggleText(this)">${shortText}</p>
        </div>
        <a href="${url}" class="button-nov">
            <button>
                <p class="p1">–ß–∏—Ç–∞—Ç—å –ø–æ–ª–Ω–æ—Å—Ç—å—é</p>
            </button>
        </a>
    `;
    
    container.appendChild(card);
}

// –û—Ç–ø—Ä–∞–≤–∫–∞ –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏
function submitFeedback() {
    const formData = {
        first_name: document.getElementById('fb-firstname')?.value || '',
        middle_name: document.getElementById('fb-middlename')?.value || '',
        last_name: document.getElementById('fb-lastname')?.value || '',
        email: document.getElementById('fb-email')?.value || '',
        message: document.getElementById('fb-message')?.value || ''
    };
    
    makeApiRequest(API_CONFIG.endpoints.feedbacks, {
        method: 'POST',
        body: JSON.stringify(formData)
    })
    .then(() => {
        alert('–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à –æ—Ç–∑—ã–≤!');
        // –û—á–∏—Å—Ç–∫–∞ —Ñ–æ—Ä–º—ã
        Object.keys(formData).forEach(key => {
            const element = document.getElementById(`fb-${key.replace('_', '')}`);
            if (element) element.value = '';
        });
    })
    .catch(error => {
        console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã:', error.message);
        alert('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
    });
}

// ========================================
// –ó–ê–ì–†–£–ó–ö–ê HTML –ö–û–ú–ü–û–ù–ï–ù–¢–û–í
// ========================================
function includeHTML(id, url, callback) {
    fetch(url)
        .then(response => response.text())
        .then(data => {
            document.getElementById(id).innerHTML = data;
            if (typeof callback === 'function') callback();
        })
        .catch(error => console.error(`–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ ${url}:`, error));
}

// ========================================
// –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø –ü–†–ò–õ–û–ñ–ï–ù–ò–Ø
// ========================================
async function initApp() {
    console.log('üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...');
    
    // –ó–∞–≥—Ä—É–∂–∞–µ–º HTML –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
    includeHTML('header', 'header.html', () => {
        if (typeof initHamburgerMenu === 'function') initHamburgerMenu();
        if (typeof initHeaderSearch === 'function') initHeaderSearch();
    });
    
    includeHTML('footer', 'footer.html', () => {
        if (typeof initUpButton === 'function') initUpButton();
    });
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ API
    const isConnected = await checkApiConnection();
    
    if (!isConnected) {
        showConnectionError();
        console.error('üõë –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –∏–∑-–∑–∞ –ø—Ä–æ–±–ª–µ–º —Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º');
        return;
    }
    
    // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Å –Ω–µ–±–æ–ª—å—à–æ–π –∑–∞–¥–µ—Ä–∂–∫–æ–π –¥–ª—è –ø–æ–ª–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ HTML
    setTimeout(async () => {
        try {
            await Promise.all([
                loadBanners(),
                loadProjects(),
                loadNews()
            ]);
            console.log('üéâ –í—Å–µ –¥–∞–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!');
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö:', error);
        }
    }, 100);
}

// –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
document.addEventListener('DOMContentLoaded', initApp);
